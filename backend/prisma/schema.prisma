generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hod {
  id       Int    @id @default(autoincrement())
  name     String @unique
  password String
}

model Teacher {
  id                      Int      @id @default(autoincrement())
  name                    String
  email                   String   @unique
  password                String
  institution             String
  department              Dept
  position                Position
  phone                   String   @unique
  office                  String
  bio                     String
  specialization          String
  qualifications          String
  professional_experience String
  created_at              DateTime @default(now())
}

model Student {
  id               Int            @id @default(autoincrement())
  name             String
  email            String          @unique
  registerno       String          @unique
  department       Dept
  year             Year
  Address          String           @default("Provide It")
  phone            String           @default("Provide It")
  bio              String           @default("Provide It")
  skills           String           @default("Provide It")
  Achivements      String           @default("Provide It")
  teams            TeamMember[]
  createdAt        DateTime        @default(now())
}

model Team {
  id                Int          @id @default(autoincrement())
  name              String
  competition       Competition  @relation(fields: [competitionId], references: [id])
  competitionId     Int
  status            Tstatus      @default(REGISTERED)
  del_status        Delstatus    @default(ONLINE)
  members           TeamMember[]
  motive            String
  experience_level  Experience   @default(BEGINNER)
  certifacte        String?
  createdAt         DateTime     @default(now())
}

model TeamMember {
  id        Int     @id @default(autoincrement())
  student   Student @relation(fields: [studentId], references: [id])
  studentId Int
  role      Role
  team      Team    @relation(fields: [teamId], references: [id])
  teamId    Int

  @@unique([studentId, teamId])
}

model Competition {
  id          Int         @id @default(autoincrement())
  name        String
  url         String
  about       String
  category    String
  status      Status
  startdate   DateTime
  enddate     DateTime
  deadline    DateTime
  location    String
  team_size   Int
  prize_pool  Int
  priority    Priority
  teams       Team[]
  createdAt   DateTime    @default(now())
}

enum Role {
  LEADER
  DEVELOPER
}
 
enum Dept {
  IT
  CSE
  AIDS
  AIML
  ECE
  EEE
  MECH
}

enum Year {
  first_Year
  second_Year
  third_Year
  fourth_Year
}

enum Position {
  PROFESSOR
  ASSOCIATE_PROFESSOR
  ASSISTANT_PROFESSOR
  HOD
}

enum Status {
  REGISTRATION_OPEN
  UPCOMING
  ONGOING
  COMPLETED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum Tstatus {
  REGISTERED
  SHORTLISTED
  REJECTED
  WON
}

enum Experience {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

enum Delstatus {
  ONLINE
  OFFLINE
}